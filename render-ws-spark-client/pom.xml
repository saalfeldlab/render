<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>modules-root</artifactId>
        <groupId>org.janelia.render</groupId>
        <version>4.1.0-SNAPSHOT</version>
    </parent>

    <name>Render Web Service Spark Client</name>
    <description>Spark clients that utilize (remote) render web service APIs.</description>
    <artifactId>render-ws-spark-client</artifactId>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>

                <executions>
                    <execution>
                        <id>shade-standalone</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>

                        <configuration>

                            <outputFile>target/${project.artifactId}-${project.version}-standalone.jar</outputFile>

                            <filters>
                                <!-- filter out overlapping resources and classes -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>module-info.class</exclude>
                                        <exclude>plugins.config</exclude>
                                        <exclude>LICENSE</exclude>
                                        <exclude>META-INF/*</exclude>
                                        <exclude>META-INF/json/org.scijava.plugin.Plugin</exclude>
                                        <exclude>META-INF/services/**</exclude>
                                        <exclude>META-INF/versions/**</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>sc.fiji:SPIM_Registration</artifact>
                                    <excludes>
                                        <exclude>META-INF/json/**</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>com.fasterxml.jackson.dataformat:jackson-dataformat-cbor</artifact>
                                    <excludes>
                                        <exclude>META-INF/services/com.fasterxml.jackson.core.JsonFactory</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.janelia.render:render-ws-*</artifact>
                                    <excludes>
                                        <exclude>git.properties</exclude> <!-- will get pulled in from render-app -->
                                        <exclude>logback.xml</exclude>
                                        <exclude>log4j.properties</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.janelia.saalfeldlab:n5-universe</artifact>
                                    <excludes>
                                        <exclude>*.json</exclude>
                                        <exclude>*.jq</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.janelia.saalfeldlab:n5-*</artifact>
                                    <excludes>
                                        <exclude>META-INF/json/org.janelia.saalfeldlab.n5.Compression*</exclude>
                                    </excludes>
                                </filter>
                            </filters>

                            <artifactSet>
                               <excludes>
                                   <exclude>jama:*</exclude>
                                   <exclude>*hadoop*</exclude>
                                   <exclude>xml-apis:*</exclude>
                                   <exclude>*spark*</exclude>
                                </excludes>
                            </artifactSet>

                        </configuration>

                    </execution>

                </executions>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Create a git.properties file to be included in the jar/war.  Configuration is defined in root module pom.xml. -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.janelia.render</groupId>
            <artifactId>render-ws-java-client</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- SciJava Dependencies -->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Overridden SciJava Dependencies -->

        <dependency>
            <groupId>org.janelia.saalfeldlab</groupId>
            <artifactId>n5</artifactId>
            <version>${n5-version}</version>
        </dependency>

        <dependency>
            <groupId>org.janelia.saalfeldlab</groupId>
            <artifactId>n5-spark</artifactId>
            <version>3.7.3</version>
            <exclusions>
                <!-- filter out dependencies that cause duplicate class failures -->
                <exclusion>
                    <groupId>com.esotericsoftware</groupId>
                    <artifactId>kryo</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.validation</groupId>
                    <artifactId>validation-api</artifactId>
                </exclusion>
                <!-- filter out unneeded google-http-client jar which causes overlap issue in shaded jar -->
                <exclusion>
                    <groupId>com.google.http-client</groupId>
                    <artifactId>google-http-client-xml</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Use older version of jackson to keep consistent with render-ws jackson-jaxrs-json-provider version. -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-version}</version>
        </dependency>

        <!-- Dependencies not defined in SciJava -->

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.13</artifactId>
            <version>3.4.1</version> <!-- released on June 23, 2023, see https://spark.apache.org/releases/spark-release-3-4-1.html -->
            <scope>provided</scope>
            <exclusions>

                <!-- filter out dependencies that cause duplicate class failures -->
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jul-to-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>

                <!--
                  Hack Process to Run Spark Jobs from IntelliJ:

                  Comment out the hadoop-client-runtime exclusion below and run mvn compile to pull it into your local .m2/repository.
                  The compile will fail because of the enforcer no-duplicate-classes rule but the jar will get pulled.
                  Once $HOME/.m2/repository/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar exists,
                  uncomment the exclusion and run mvn clean package.
                  Finally, add the hadoop-client-runtime-3.3.4.jar to IntelliJ run configurations to run local Spark jobs from IDE.

                  Note that the hadoop version will change with Spark version changes.
                  Hopefully, whoever updates Spark will also update this comment with the new corresponding hadoop version and .m2 path.
                -->
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-client-runtime</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <!--
      Administrative elements required by org.scijava.maven.plugin.enforcer.RequireElements
      that have to be copied.  Too bad they can't just be taken from parent pom.
    -->
    <url>https://github.com/saalfeldlab/render</url>
    <inceptionYear>2014</inceptionYear>
    <organization><name>see parent</name></organization>
    <licenses><license><name>see parent</name></license></licenses>
    <developers><developer><name>see parent</name></developer></developers>
    <contributors><contributor><name>see parent</name></contributor></contributors>
    <mailingLists><mailingList><name>None</name></mailingList></mailingLists>
    <scm><tag>see parent</tag></scm>
    <issueManagement><system>see parent</system></issueManagement>
    <ciManagement><system>see parent</system></ciManagement>
    <properties>
        <license.licenseName>gpl_v2</license.licenseName>
        <license.copyrightOwners>Howard Hughes Medical Institute</license.copyrightOwners>
    </properties>

</project>
