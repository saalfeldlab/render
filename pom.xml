<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.scijava</groupId>
        <artifactId>pom-scijava</artifactId>
        <version>29.2.1</version>
        <relativePath />
    </parent>

    <name>Janelia Render Tools And Services</name>
    <groupId>org.janelia.render</groupId>
    <artifactId>modules-root</artifactId>
    <version>4.0.1-SNAPSHOT</version>

    <description>A collection of tools and HTTP services (APIs) for rendering transformed image tiles.</description>
    <url>https://github.com/saalfeldlab/render</url>
    <inceptionYear>2014</inceptionYear>
    <organization>
        <name>Janelia Research Campus</name>
        <url>https://www.janelia.org/lab/saalfeld-lab</url>
    </organization>
    <licenses>
        <license>
            <name>GNU General Public License v2+</name>
            <url>https://www.gnu.org/licenses/old-licenses/gpl-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>axtimwalde</id>
            <name>Stephan Saalfeld</name>
            <url>https://imagej.net/User:Saalfeld</url>
            <roles>
                <role>founder</role>
                <role>lead</role>
                <role>developer</role>
                <role>reviewer</role>
            </roles>
        </developer>
        <developer>
            <id>trautmane</id>
            <name>Eric T. Trautman</name>
            <url>https://www.janelia.org/people/eric-trautman</url>
            <roles>
                <role>lead</role>
                <role>developer</role>
                <role>debugger</role>
                <role>reviewer</role>
                <role>support</role>
                <role>maintainer</role>
            </roles>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Eric Perlman</name>
            <properties><id>perlman</id></properties>
        </contributor>
        <contributor>
            <name>Forrest Collman</name>
            <properties><id>fcollman</id></properties>
        </contributor>
        <contributor>
            <name>Russel Torres</name>
            <properties><id>RussTorres</id></properties>
        </contributor>
        <contributor>
            <name>Stephan Preibisch</name>
            <url>https://imagej.net/User:StephanP</url>
            <properties><id>StephanPreibisch</id></properties>
        </contributor>
    </contributors>

    <mailingLists>
        <mailingList>
            <name>None</name>
        </mailingList>
    </mailingLists>

    <scm>
        <url>https://github.com/saalfeldlab/render</url>
    </scm>

    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/saalfeldlab/render/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Travis CI</system>
        <url>https://travis-ci.com/saalfeldlab/render</url>
    </ciManagement>

    <packaging>pom</packaging>

    <modules>
        <module>render-app</module>
        <module>render-ws</module>
        <module>render-ws-java-client</module>
        <module>render-ws-spark-client</module>
        <module>trakem2-scripts</module>
        <module>docs</module>
    </modules>

    <repositories>
        <!-- NB: for project parent -->
        <repository>
            <id>imagej.public</id>
            <url>https://maven.scijava.org/content/groups/public</url>
        </repository>
    </repositories>

    <dependencies>
        <!--
          Removed all direct dependencies from here since apparently pom projects
          should only "manage" dependencies and not "have" them.
          This means common dependencies like junit and logback have to be
          explicitly and repeatedly referenced in sub-module poms (which is unfortunate).
          However, the absence of dependencies here prevents the enforcer plugin
          from issuing confusing warnings like "Could not find ... at null".
          See https://github.com/imagej/imagej-matlab/issues/11 for details.
        -->
    </dependencies>

    <properties>
        <!--
          Use MPI-CBG 1.4.2 to pull in SIFT fix from Preibisch.
          See https://github.com/axtimwalde/mpicbg/commit/94fcf09d4a022245a24761f2977b1815002fa310 for details.
        -->
        <mpicbg.version>1.4.2</mpicbg.version>
        <mpicbg_.version>${mpicbg.version}</mpicbg_.version>

        <!--
          NOTE: To prevent attributes.json read errors the render n5 version should be kept in-sync with
                the hot-knife n5 version if you need to run concurrent code from both repos on the same n5 group.
        -->
        <n5-version>2.5.1</n5-version>

        <!-- NOTE: need old version of jitk-tps before John removed mpicbg dependency -->
        <jitk-tps-with-mpicbg.version>1.3.2</jitk-tps-with-mpicbg.version>

        <jackson-version>2.11.0</jackson-version>

        <swagger-version>1.6.2</swagger-version>

        <!-- should be kept in sync with render-ws/src/main/scripts/jetty/configure_web_server.sh -->
        <slf4j.version>2.0.5</slf4j.version>
        <logback.version>1.3.5</logback.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <license.licenseName>gpl_v2</license.licenseName>
        <license.copyrightOwners>Howard Hughes Medical Institute</license.copyrightOwners>

        <!-- Override JDK 8 settings in pom-scijava-base now that Jetty 10 has forced us to JDK 11  -->
        <scijava.jvm.version>11</scijava.jvm.version>
        <scijava.jvm.build.version>[11,]</scijava.jvm.build.version>

        <!--        <deploy.path>/Users/trautmane/projects/git/maven</deploy.path>-->
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <release>11</release>
                    </configuration>
                </plugin>
                <!--
                  Uncomment plugin block below to disable maven-enforcer-plugin rules from scijava.
                -->
<!--                <plugin>-->
<!--                    <artifactId>maven-enforcer-plugin</artifactId>-->
<!--                    <executions>-->
<!--                        <execution>-->
<!--                            <id>enforce-rules</id>-->
<!--                            <phase>none</phase>-->
<!--                        </execution>-->
<!--                    </executions>-->
<!--                </plugin>-->

                <!-- Uncomment this block to deploy to local path -->
<!--                <plugin>-->
<!--                    <artifactId>maven-deploy-plugin</artifactId>-->
<!--                    <version>2.8.2</version>-->
<!--                    <configuration>-->
<!--                        <altDeploymentRepository>internal.repo::default::file://${deploy.path}</altDeploymentRepository>-->
<!--                    </configuration>-->
<!--                </plugin>-->

            </plugins>
        </pluginManagement>
    </build>

    <!-- Uncomment this block to deploy to local path -->
<!--    <distributionManagement>-->
<!--        <repository>-->
<!--            <id>local-maven-repo</id>-->
<!--            <name>Local Maven Repository</name>-->
<!--            <url>file://${deploy.path}</url>-->
<!--        </repository>-->
<!--    </distributionManagement>-->

</project>
