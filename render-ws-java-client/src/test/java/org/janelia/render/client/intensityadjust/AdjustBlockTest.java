package org.janelia.render.client.intensityadjust;

import java.io.FileReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.janelia.alignment.spec.ResolvedTileSpecCollection;
import org.janelia.alignment.spec.TileSpec;
import org.janelia.alignment.util.ImageProcessorCache;
import org.janelia.render.client.intensityadjust.virtual.OnTheFlyIntensity;
import org.junit.Assert;
import org.junit.Test;

/**
 * Tests the {@link AdjustBlock} class.
 *
 * @author Eric Trautman
 */
public class AdjustBlockTest {

    @Test
    public void testCorrectIntensitiesForSliceTiles() throws Exception {
        final List<TileSpec> tileSpecs =
                TileSpec.fromJsonArray(new FileReader("src/test/resources/multisem/adjust-block-test-tiles.json"));

        final ResolvedTileSpecCollection resolvedTiles = new ResolvedTileSpecCollection(new ArrayList<>(),
                                                                                        tileSpecs);

        final List<MinimalTileSpecWrapper> wrappedTiles = AdjustBlock.wrapTileSpecs(resolvedTiles);

        final ArrayList<OnTheFlyIntensity> correctedList =
                AdjustBlock.correctIntensitiesForSliceTiles(wrappedTiles,
                                                            ImageProcessorCache.DISABLED_CACHE,
                                                            AdjustBlock.DEFAULT_NUM_COEFFICIENTS);

        final Map<String, double[][]> tileIdToExpectedCoefficients = new HashMap<>();
        tileIdToExpectedCoefficients.put(
                "045_000004_016_20220401_183940.1260.0",
                new double[][]{
                        {1.0447894354476652, -0.06961792167018394}, {1.0461358685183675, -0.07341460200530013},
                        {1.0462230868560396, -0.07435707210876898}, {1.0439261047341948, -0.07193989307376905},
                        {1.0464869643745665, -0.08348625691598895}, {1.0439325195824687, -0.07496952089390749},
                        {1.0452878886642336, -0.0776570957572558}, {1.0434184440292265, -0.07381039378141242},
                        {1.0457586631173346, -0.0754303525258571}, {1.045777043650914, -0.0753286564894624},
                        {1.0467053627153478, -0.07802224305912714}, {1.0455255669167258, -0.07719859872288304},
                        {1.0458701285787697, -0.08120907305633539}, {1.0452217221957805, -0.07784140658795684},
                        {1.0455676574822323, -0.07838636475848124}, {1.0451943544057731, -0.07834933403097574},
                        {1.0445236389785812, -0.07593280338562478}, {1.0436722206019617, -0.07482679769481487},
                        {1.044984976524446, -0.07755231887533397}, {1.0455909855513854, -0.07973682349407027},
                        {1.0445664021518752, -0.07770657136088738}, {1.0449448271987118, -0.07793440624892972},
                        {1.0448705207939408, -0.07646992826503302}, {1.045511144312466, -0.07741097522164803},
                        {1.043407342853975, -0.07641863642666763}, {1.0418379091471632, -0.0743052664845424},
                        {1.0438256757965467, -0.07712255604928951}, {1.0438004749587597, -0.07643828227055252},
                        {1.04448129239456, -0.0772433486040509}, {1.0433865234610578, -0.07402102476861205},
                        {1.0452907508757363, -0.07679229038174533}, {1.045687548662682, -0.07599065083162132},
                        {1.042531088724449, -0.07544529789438896}, {1.042577133252547, -0.07526644047152688},
                        {1.0427729253076423, -0.07543832161330052}, {1.0430951599078737, -0.07658709659598956},
                        {1.0439550315418635, -0.07684558928264147}, {1.043354873201554, -0.0737779654269126},
                        {1.0446786897857188, -0.07491785461215551}, {1.0460515940239017, -0.07694209059253938},
                        {1.0414181345598392, -0.0753886355919095}, {1.042067157623637, -0.07640277802466187},
                        {1.041583682984583, -0.07481380512853836}, {1.0416208565753398, -0.074805773102422},
                        {1.043720341128606, -0.07703946013703694}, {1.0430580210810299, -0.07404881092799478},
                        {1.0438975211750166, -0.07360335577871684}, {1.0456894933548508, -0.07596785549904078},
                        {1.040501668846231, -0.07560097669600255}, {1.0412931669326928, -0.07647089993995472},
                        {1.0419869482708204, -0.07732901501332093}, {1.042237501315795, -0.0765529905726046},
                        {1.0425282121850166, -0.07541305087282499}, {1.0427580737838007, -0.0739714642840288},
                        {1.043598507366497, -0.07468190056588755}, {1.0441394685135983, -0.07381118892538867},
                        {1.0389000947889127, -0.07348927135589085}, {1.039911323565012, -0.07548676822377755},
                        {1.0401091013126413, -0.07449060379292474}, {1.039277540445339, -0.07151600562812972},
                        {1.0396618795868813, -0.07127951055462335}, {1.0395957765611998, -0.06967646797718571},
                        {1.0411190934943095, -0.07084664237710098}, {1.0432422618919721, -0.07368118271562879}
                });

        tileIdToExpectedCoefficients.put(
                "045_000004_016_20220403_125446.1266.0",
                new double[][]{
                        {0.87056335222603, 0.10477488229810149}, {0.8743333352033633, 0.10220647921758585},
                        {0.8777174251502317, 0.10078683774399355}, {0.8824121506124237, 0.09708942139266799},
                        {0.8868799782448052, 0.09310412166226094}, {0.8890342129950585, 0.0933500590996649},
                        {0.894680505666806, 0.08789315509776206}, {0.8930099670241454, 0.09169321191149941},
                        {0.8636504872540144, 0.11304630352716627}, {0.8671736665006315, 0.10899342943625911},
                        {0.8684013753373636, 0.11070895910495766}, {0.8707805420088442, 0.11327772304119829},
                        {0.8757734440104739, 0.1084216032364679}, {0.8817708039893374, 0.10220319233955347},
                        {0.8871157181332151, 0.09885818920245519}, {0.8900862741399058, 0.09538579051192242},
                        {0.8620313322661337, 0.11310863820265518}, {0.8635308594510522, 0.11381450260736466},
                        {0.8683806736666737, 0.10955689431919773}, {0.8721577269913514, 0.10740757485829021},
                        {0.8749749618759813, 0.10596546055540693}, {0.8795315771749687, 0.10296756887422724},
                        {0.8837444348844872, 0.09965868237017919}, {0.8882468328266705, 0.09535722590989269},
                        {0.8587192451823746, 0.11391575113150515}, {0.86097344413882, 0.11472661293667277},
                        {0.8662804492367225, 0.11028206557615572}, {0.8731173243599352, 0.1040213743139573},
                        {0.8748057094181859, 0.10390304197139155}, {0.8794471065063977, 0.10201071571325704},
                        {0.8827697769985301, 0.09919743246521277}, {0.8876216502875249, 0.09371662764121337},
                        {0.8557687271394958, 0.11514223650409722}, {0.8610566145806863, 0.11255915532854265},
                        {0.8633239332001296, 0.11106899634069105}, {0.8678333999216921, 0.10838889837880472},
                        {0.8723669323502226, 0.10537105219098945}, {0.8777472108766884, 0.10161583297794015},
                        {0.8806619717783938, 0.09924432292463554}, {0.8842479327328638, 0.0949937656347407},
                        {0.8555745584762872, 0.11146531583704676}, {0.8592327750842811, 0.1120523595908256},
                        {0.8645422901036913, 0.10616554742772098}, {0.8651875223508857, 0.10774609363782968},
                        {0.8685219467892565, 0.10689910792883674}, {0.8729964820783781, 0.1046633901716538},
                        {0.8779641086475801, 0.09989555912888842}, {0.8805181320552617, 0.09818896041686853},
                        {0.8545139994955503, 0.11604861693497676}, {0.8589248863300148, 0.10939985175702484},
                        {0.8591908282588893, 0.11315980509019219}, {0.8610042738531741, 0.11146344824879201},
                        {0.8672203798780583, 0.1058939177400107}, {0.8708323330674633, 0.10469404118043314},
                        {0.8727837053025247, 0.10510238619616345}, {0.8785794367402983, 0.09785935172991013},
                        {0.8585498242016483, 0.11028726303793966}, {0.8599745172470687, 0.1090919286147087},
                        {0.8625239839097496, 0.10489233981795691}, {0.864388857441663, 0.10399260977926265},
                        {0.8684383598433036, 0.10031594704358154}, {0.8703981765552982, 0.10039603471854723},
                        {0.8742305759625452, 0.09915610535724423}, {0.8767191222251471, 0.09719588592352381}
                });



        final double allowedDelta = 0.0001;

        for (final OnTheFlyIntensity correctedTile : correctedList) {

            final String tileId = correctedTile.getMinimalTileSpecWrapper().getTileId();
            final double[][] expectedCoefficients = tileIdToExpectedCoefficients.get(tileId);
            final double[][] actualCoefficients = correctedTile.getCoefficients();

            Assert.assertEquals("coefficient array lengths differ",
                                expectedCoefficients.length, actualCoefficients.length);

            for (int i = 0; i < expectedCoefficients.length; i++) {

                final double[] expectedRow = expectedCoefficients[i];
                final double[] actualRow = actualCoefficients[i];

                Assert.assertEquals("coefficient[" + i + "] lengths differ",
                                    expectedRow.length, actualRow.length);

                for (int j = 0; j < expectedRow.length; j++) {
                    Assert.assertEquals("coefficient [" + i + "][" + j + "] values differ",
                                        expectedRow[j], actualRow[j], allowedDelta);

                }

            }
        }

    }

}
