<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>modules-root</artifactId>
        <groupId>org.janelia.render</groupId>
        <version>4.2.0-SNAPSHOT</version>
    </parent>

    <name>Render Web Service Java Client</name>
    <description>Java clients that utilize (remote) render web service APIs.</description>
    <artifactId>render-ws-java-client</artifactId>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>

                <executions>
                    <execution>
                        <id>shade-standalone</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>

                        <configuration>

                            <outputFile>target/${project.artifactId}-${project.version}-standalone.jar</outputFile>

                            <transformers>

                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>org.janelia.render.client.RenderClient</mainClass>
                                </transformer>

                                <!--
                                    Compression implementations defined in org.janelia.saalfeldlab:n5,
                                    org.janelia.saalfeldlab:n5-blosc, and org.janelia:n5-zstandard get built/serialized
                                    into META-INF/json/org.janelia.saalfeldlab.n5.Compression$CompressionType files by
                                    https://github.com/scijava/scijava-common/blob/master/src/main/java/org/scijava/annotations/AnnotationCombiner.java

                                    The serializations need to be combined into a single resource for this fat jar
                                    ( see https://imagej.net/imagej-wiki-static/Uber-JAR ).

                                    Note that the org.janelia.saalfeldlab:n5-blosc implementation is excluded in the
                                    filters area below because we don't currently need it.
                                -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer"
                                             combine.children="append">
                                    <resource>META-INF/json/org.janelia.saalfeldlab.n5.Compression$CompressionType</resource>
                                </transformer>

                            </transformers>

                            <filters>
                                <filter>
                                    <artifact>sc.fiji:scijava-common</artifact>
                                    <includes>
                                        <include>META-INF/json/org.scijava.plugin.Plugin</include>
                                    </includes>
                                </filter>
                                <!-- filter out overlapping resources and classes -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>module-info.class</exclude>
                                        <exclude>plugins.config</exclude>
                                        <exclude>LICENSE</exclude>
                                        <exclude>META-INF/*</exclude>
                                        <exclude>META-INF/versions/**</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>sc.fiji:SPIM_Registration</artifact>
                                    <excludes>
                                        <exclude>META-INF/json/**</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>com.fasterxml.jackson.dataformat:jackson-dataformat-cbor</artifact>
                                    <excludes>
                                        <exclude>META-INF/services/com.fasterxml.jackson.core.JsonFactory</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.janelia.render:render-app</artifact>
                                    <excludes>
                                        <exclude>git.properties</exclude> <!-- will get pulled in from render-ws-java-client -->
                                    </excludes>
                                </filter>

                                <!--
                                  Avoid IllegalArgumentException: No compatible service: org.scijava.plugin.PluginService
                                  when running tools that rely upon bigdataviewer-vistools by excluding all copies
                                  of META-INF/json/org.scijava.plugin.Plugin except the one from scijava-common.
                                  Wish there was an easier/simpler way to do this ...
                                -->
                                <filter>
                                    <artifact>sc.fiji:bigdataviewer-core</artifact>
                                    <excludes>
                                        <exclude>META-INF/json/org.scijava.plugin.Plugin</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>net.imagej:imagej-common</artifact>
                                    <excludes>
                                        <exclude>META-INF/json/org.scijava.plugin.Plugin</exclude>
                                    </excludes>
                                </filter>
                                <filter>
                                    <artifact>org.scijava:scijava-table</artifact>
                                    <excludes>
                                        <exclude>META-INF/json/org.scijava.plugin.Plugin</exclude>
                                    </excludes>
                                </filter>

                                <!--
                                    Filter out org.janelia.saalfeldlab:n5-blosc compression support because
                                    we don't currently need it.
                                    It produces distracting java.lang.UnsatisfiedLinkError warning messages in
                                    environments where blosc is not independently installed.
                                -->
                                <filter>
                                    <artifact>org.janelia.saalfeldlab:n5-blosc</artifact>
                                    <excludes>
                                        <exclude>META-INF/json/org.janelia.saalfeldlab.n5.Compression$CompressionType</exclude>
                                    </excludes>
                                </filter>

                            </filters>

                            <artifactSet>
                                <excludes>
                                    <exclude>jama:*</exclude>
                                </excludes>
                            </artifactSet>

                        </configuration>

                    </execution>
                    
                </executions>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Create a git.properties file to be included in the jar/war.  Configuration is defined in root module pom.xml. -->
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>org.janelia.render</groupId>
            <artifactId>render-app</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- SciJava Dependencies -->

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>

        <dependency>
            <groupId>sc.fiji</groupId>
            <artifactId>bigdataviewer-vistools</artifactId>
        </dependency>

        <dependency>
            <groupId>sc.fiji</groupId>
            <artifactId>z_spacing</artifactId>
            <exclusions>
                <!-- filter out TrakEM2_ to avoid conflict between its jline and Spark org.fusesource.leveldbjni -->
                <exclusion>
                    <groupId>sc.fiji</groupId>
                    <artifactId>TrakEM2_</artifactId>
                </exclusion>
                <!-- filter out bigdataviewer-vistools so we get only the version we want -->
                <exclusion>
                    <groupId>sc.fiji</groupId>
                    <artifactId>bigdataviewer-vistools</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>sc.fiji</groupId>
            <artifactId>bigdataviewer-core</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Overridden SciJava Dependencies -->

        <dependency>
            <groupId>org.janelia.saalfeldlab</groupId>
            <artifactId>n5</artifactId>
            <version>${n5-version}</version>
        </dependency>

        <!-- Use older version of jackson to keep consistent with render-ws jackson-jaxrs-json-provider version. -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-version}</version>
        </dependency>

        <!-- Dependencies not defined in SciJava -->

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
        </dependency>

        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-tiff</artifactId>
            <version>3.1.1</version>
        </dependency>

        <dependency>
            <groupId>au.com.bytecode</groupId>
            <artifactId>opencsv</artifactId>
            <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <version>5.15.0</version>
            <scope>test</scope>
            <exclusions>
                <!-- filter out slf4j jar so that it does not conflict with jetty version -->
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <!-- filter out javax.activation so that it does not duplicate jakarta.activation -->
                <exclusion>
                    <groupId>javax.activation</groupId>
                    <artifactId>activation</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <!--
      Administrative elements required by org.scijava.maven.plugin.enforcer.RequireElements
      that have to be copied.  Too bad they can't just be taken from parent pom.
    -->
    <url>https://github.com/saalfeldlab/render</url>
    <inceptionYear>2014</inceptionYear>
    <organization><name>see parent</name></organization>
    <licenses><license><name>see parent</name></license></licenses>
    <developers><developer><name>see parent</name></developer></developers>
    <contributors><contributor><name>see parent</name></contributor></contributors>
    <mailingLists><mailingList><name>None</name></mailingList></mailingLists>
    <scm><tag>see parent</tag></scm>
    <issueManagement><system>see parent</system></issueManagement>
    <ciManagement><system>see parent</system></ciManagement>
    <properties>
        <license.licenseName>gpl_v2</license.licenseName>
        <license.copyrightOwners>Howard Hughes Medical Institute</license.copyrightOwners>
    </properties>

</project>
